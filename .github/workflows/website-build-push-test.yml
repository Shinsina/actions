name: Website build, integration tests

on:
  workflow_call:
    inputs:
      push:
        type: boolean
        default: false
      ecr_registry:
        type: string
        required: true
      site_account:
        type: string
        required: true
      site_dir:
        type: string
        required: true
      site_version:
        type: string
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to ECR
        if: inputs.push
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.ecr_registry }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ inputs.push }}
          build-args: |
            SITE=${{ inputs.site_dir }}
          tags: ${{ inputs.ecr_registry }}/base-cms-websites:${{ inputs.site_account }}-${{ inputs.site_dir }}-${{ inputs.site_version }}

      - name: Boot docker image
        run: |
          docker run -p 80:80 \
            --name website-${{ inputs.site_dir }} \
            -e RECAPTCHA_V3_SITE_KEY=not-set \
            -e RECAPTCHA_V3_SECRET_KEY=not-set \
            -e SENDGRID_API_KEY=not-set \
            -e OMEDA_APP_ID=not-set \
            -e OMEDA_INPUT_ID=not-set \
            -e AB_PROJECTS_GRAPHQL_URL=https://graphql.ab-projects.parameter1.com \
            -e ZERO_BOUNCE_API_KEY=not-set \
            ${{ inputs.ecr_registry }}/base-cms-websites:${{ inputs.site_account }}-${{ inputs.site_dir }}-${{ inputs.site_version }} &

      - uses: actions/setup-node@v3
        with:
          node-version: 14.21

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile

      - name: Run integration tests
        run: node ./test/integration.js
        timeout-minutes: 1

      - name: Stop docker image
        run: docker stop website-${{ inputs.site_dir }}
